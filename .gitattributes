# Set default behavior to automatically normalize line endings
* text=auto

# Explicitly declare text files you want to always be normalized and converted
# to native line endings on checkout
*.ts text
*.tsx text
*.js text
*.jsx text
*.json text
*.md text
*.yml text
*.yaml text
*.css text
*.scss text
*.html text
*.xml text
*.sql text
*.sh text
*.dockerfile text
*.gitignore text
*.gitattributes text
*.editorconfig text
*.prettierrc text
*.eslintrc text
*.babelrc text
*.browserslistrc text
*.npmrc text
*.yarnrc text
*.lock text

# Declare files that will always have CRLF line endings on checkout
*.bat text eol=crlf

# Declare files that will always have LF line endings on checkout
*.sh text eol=lf

# Denote all files that are truly binary and should not be modified
*.png binary
*.jpg binary
*.jpeg binary
*.gif binary
*.ico binary
*.mov binary
*.mp4 binary
*.mp3 binary
*.flv binary
*.fla binary
*.swf binary
*.gz binary
*.zip binary
*.7z binary
*.tar binary
*.rar binary
*.pdf binary
*.woff binary
*.woff2 binary
*.ttf binary
*.eot binary
*.otf binary
*.svg binary

# Docker files
Dockerfile text
docker-compose.yml text
.dockerignore text

# Prisma files
*.prisma text

# Environment files
.env* text

# Logs
*.log text

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.local
.env.production

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/
